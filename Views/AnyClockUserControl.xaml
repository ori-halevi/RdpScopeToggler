<UserControl x:Class="RdpScopeToggler.Views.AnyClockUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"             
             prism:ViewModelLocator.AutoWireViewModel="True"
             
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:RdpScopeToggler"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"            
             
             >

    <Grid Margin="20" HorizontalAlignment="Center">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <!-- Days -->
        <TextBlock x:Name="TextBlockDay" Text="D" FontWeight="Bold" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0" >
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Opacity" Value="0" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=IntUpDownDay}" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Border Margin="3 0" Padding="4" CornerRadius="4" BorderThickness="1" Grid.Column="0" Grid.Row="1"
            BorderBrush="{DynamicResource MaterialDesignOutlineBorderBrush}"
            Background="{DynamicResource MaterialDesignPaper}">
            <xctk:IntegerUpDown x:Name="IntUpDownDay"
                TextAlignment="Center"
                Value="{Binding CountDownDay, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=UserControl}}"
                FontSize="20" MinWidth="30" Minimum="0" Maximum="365" Increment="1"
                ShowButtonSpinner="False"
                IsReadOnly="{Binding IsReadOnly, ElementName=root}"
                PreviewMouseWheel="OnMouseWheel"
                BorderThickness="0" Background="Transparent"
                                ValueChanged="IntegerUpDown_ValueChanged"
                                PreviewTextInput="IntegerUpDown_PreviewTextInput"
                                PreviewKeyDown="IntegerUpDown_PreviewKeyDown"
                Foreground="{DynamicResource MaterialDesignBody}" />
        </Border>
        <TextBlock Text=":" FontSize="20" VerticalAlignment="Center"  Grid.Column="1" Grid.Row="1" />

        <!-- Hours -->
        <TextBlock x:Name="TextBlockHour" Text="H" FontWeight="Bold" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="0" >
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Opacity" Value="0" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=IntUpDownHour}" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Border Margin="3 0" Padding="4" CornerRadius="4" BorderThickness="1" Grid.Column="2" Grid.Row="1"
            BorderBrush="{DynamicResource MaterialDesignOutlineBorderBrush}"
            Background="{DynamicResource MaterialDesignPaper}">
            <xctk:IntegerUpDown x:Name="IntUpDownHour"
                LostFocus="OnIntegerUpDownLostFocus"
                TextAlignment="Center"
                Value="{Binding CountDownHour, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=UserControl}}"
                FontSize="20" MinWidth="30" Minimum="0" Maximum="23" Increment="1"
                ShowButtonSpinner="False"
                IsReadOnly="{Binding IsReadOnly, ElementName=root}"
                PreviewMouseWheel="OnMouseWheel"
                BorderThickness="0" Background="Transparent"
                                ValueChanged="IntegerUpDown_ValueChanged"
                                PreviewTextInput="IntegerUpDown_PreviewTextInput"
                                PreviewKeyDown="IntegerUpDown_PreviewKeyDown"
                Foreground="{DynamicResource MaterialDesignBody}" />
        </Border>
        <TextBlock Text=":" FontSize="20" VerticalAlignment="Center"  Grid.Column="3" Grid.Row="1" />

        <!-- Minutes -->
        <TextBlock x:Name="TextBlockMinute" Text="M" FontWeight="Bold" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="0" >
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Opacity" Value="0" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=IntUpDownMinute}" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Border Margin="3 0" Padding="4" CornerRadius="4" BorderThickness="1" Grid.Column="4" Grid.Row="1"
            BorderBrush="{DynamicResource MaterialDesignOutlineBorderBrush}"
            Background="{DynamicResource MaterialDesignPaper}">
            <xctk:IntegerUpDown x:Name="IntUpDownMinute"
                TextAlignment="Center"
                Value="{Binding CountDownMinute, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=UserControl}}"
                FontSize="20" MinWidth="30" Minimum="0" Maximum="59" Increment="1"
                ShowButtonSpinner="False"
                IsReadOnly="{Binding IsReadOnly, ElementName=root}"
                PreviewMouseWheel="OnMouseWheel"
                BorderThickness="0" Background="Transparent"
                                ValueChanged="IntegerUpDown_ValueChanged"
                                PreviewTextInput="IntegerUpDown_PreviewTextInput"
                                PreviewKeyDown="IntegerUpDown_PreviewKeyDown"
                LostFocus="OnIntegerUpDownLostFocus"
                Foreground="{DynamicResource MaterialDesignBody}" />
        </Border>
        <TextBlock x:Name="TextBlockColonBeforeSeconds" Text=":" FontSize="20" VerticalAlignment="Center"  Grid.Column="5" Grid.Row="1" />

        <!-- Seconds -->
        <TextBlock x:Name="TextBlockSecond" Text="S" FontWeight="Bold" HorizontalAlignment="Center" Grid.Column="6" Grid.Row="0" >
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Opacity" Value="0" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=IntUpDownSecond}" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Border x:Name="BorderSeconds" Margin="3 0" Padding="4" CornerRadius="4" BorderThickness="1" Grid.Column="6" Grid.Row="1"
            BorderBrush="{DynamicResource MaterialDesignOutlineBorderBrush}"
            Background="{DynamicResource MaterialDesignPaper}">
            <xctk:IntegerUpDown x:Name="IntUpDownSecond"
                TextAlignment="Center"
                Value="{Binding CountDownSecond, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=UserControl}}"
                FontSize="20" MinWidth="30" Minimum="0" Maximum="59" Increment="1"
                ShowButtonSpinner="False"
                IsReadOnly="{Binding IsReadOnly, ElementName=root}"
                PreviewMouseWheel="OnMouseWheel"
                BorderThickness="0" Background="Transparent"
                                ValueChanged="IntegerUpDown_ValueChanged"
                                PreviewTextInput="IntegerUpDown_PreviewTextInput"
                                PreviewKeyDown="IntegerUpDown_PreviewKeyDown"
                LostFocus="OnIntegerUpDownLostFocus"
                Foreground="{DynamicResource MaterialDesignBody}" />
        </Border>
    </Grid>

</UserControl>
